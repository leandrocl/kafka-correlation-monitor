spring:
  application:
    name: rest-api
  datasource:
    url: jdbc:hsqldb:file:./data/restapi;shutdown=true;hsqldb.remote_open=true
    username: sa
    password: 
    driver-class-name: org.hsqldb.jdbc.JDBCDriver
  h2:
    console:
      path: /h2-console
      enabled: true
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.HSQLDialect
        format_sql: true
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
    consumer:
      group-id: rest-api-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
      auto-commit-interval: 1000
      session-timeout-ms: 30000
      heartbeat-interval-ms: 3000
      max-poll-records: 500
      max-poll-interval-ms: 300000
  profiles:
    active: dev

# AWS Configuration
aws:
  region: us-east-1
  sqs:
    queue-url: https://sqs.us-east-1.amazonaws.com/123456789012/example-queue
  sns:
    topic-arn: arn:aws:sns:us-east-1:123456789012:example-topic

# Server Configuration
server:
  port: 8080

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: never

# Kafka Topics Configuration
kafka:
  topics:
    - name: test-topic
      consumer-group: test-consumer-group
      correlated-topic: test-topic-correlated
      key-of-interest: userId
      correlated-key-of-interest: correlationId
    - name: test-topic-json
      consumer-group: json-consumer-group
      correlated-topic: test-topic-json-correlated
      key-of-interest: messageId
      correlated-key-of-interest: sessionId
    - name: user-events
      consumer-group: user-events-consumer-group
      correlated-topic: user-events-correlated
      key-of-interest: userEmail
      correlated-key-of-interest: transactionId
    - name: system-events
      consumer-group: system-events-consumer-group
      correlated-topic: system-events-correlated
      key-of-interest: eventId
      correlated-key-of-interest: requestId

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

# Scheduler Configuration
scheduler:
  cleanup:
    interval-seconds: 60
  monitor:
    interval-seconds: 10
    age-threshold-seconds: 40
    
  info:
    title: Spring Boot REST API
    description: A RESTful API with Spring Boot, HSQLDB, and AWS SQS/SNS integration
    version: 1.0.0
    contact:
      name: API Support
      email: support@example.com 